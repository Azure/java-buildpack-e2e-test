name: Create builds
on:
  release:
    types:
      - published
jobs:
  jar-build:
    strategy:
      matrix:
        version: [ 8, 11, 17, 21 ]
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./springboot

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.version }}
          distribution: 'adopt'

      - name: Set up the Maven dependencies caching
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: package
        run: mvn clean package -DskipTests

      - name: create gz file
        run: tar -czvf java${{ matrix.version }}-jar-spring.tar.gz  -C target demo-0.0.1-SNAPSHOT.jar

      - name: upload asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./springboot/java${{ matrix.version }}-jar-spring.tar.gz
          asset_name: java${{ matrix.version }}-jar-spring.tar.gz
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ BP_BOT_GITHUB_TOKEN }}

  source-build:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v3

      - name: create gz file
        run: tar -czvf java-source-spring.tar.gz -C springboot .

      - name: upload asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./java-source-spring.tar.gz
          asset_name: java-source-spring.tar.gz
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ BP_BOT_GITHUB_TOKEN }}

  war-build:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./war

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Set up the Maven dependencies caching
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: package
        run: mvn clean package -DskipTests

      - name: upload asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./war/target/java17-spring.war
          asset_name: java17-spring.war
          asset_content_type: application/war
        env:
          GITHUB_TOKEN: ${{ BP_BOT_GITHUB_TOKEN }}

  war-source-build:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v3

      - name: create gz file for war
        run: tar -czvf java-source-spring-war.tar.gz -C war .

      - name: upload asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./java-source-spring-war.tar.gz
          asset_name: java-source-spring-war.tar.gz
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ BP_BOT_GITHUB_TOKEN }}